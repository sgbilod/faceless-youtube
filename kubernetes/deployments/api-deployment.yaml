apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: doppelganger-studio
  labels:
    app: doppelganger-api
    component: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: doppelganger-api
  template:
    metadata:
      labels:
        app: doppelganger-api
    spec:
      containers:
        - name: api
          image: doppelganger-studio/api:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              name: http
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: database-credentials
                  key: DATABASE_URL
          envFrom:
            - configMapRef:
                name: app-config
            - secretRef:
                name: api-keys
          resources:
            requests:
              cpu: "500m"
              memory: "1Gi"
            limits:
              cpu: "2000m"
              memory: "4Gi"
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 5
          volumeMounts:
            - name: assets
              mountPath: /app/assets
            - name: output
              mountPath: /app/output_videos
      volumes:
        - name: assets
          persistentVolumeClaim:
            claimName: assets-pvc
        - name: output
          persistentVolumeClaim:
            claimName: output-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: doppelganger-studio
spec:
  type: ClusterIP
  selector:
    app: doppelganger-api
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP
      name: http
